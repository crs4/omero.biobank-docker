# **********************************************************************
#
# Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.4.2
#
# <auto-generated>
#
# Generated from file `Location.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

import Ice, IcePy, __builtin__
import omero_model_IObject_ice
import omero_RTypes_ice
import omero_System_ice
import omero_Collections_ice

# Included module omero
_M_omero = Ice.openModule('omero')

# Included module omero.model
_M_omero.model = Ice.openModule('omero.model')

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Included module omero.sys
_M_omero.sys = Ice.openModule('omero.sys')

# Included module omero.api
_M_omero.api = Ice.openModule('omero.api')

# Start of module omero
__name__ = 'omero'

# Start of module omero.model
__name__ = 'omero.model'

if not _M_omero.model.__dict__.has_key('Details'):
    _M_omero.model._t_Details = IcePy.declareClass('::omero::model::Details')
    _M_omero.model._t_DetailsPrx = IcePy.declareProxy('::omero::model::Details')

if not _M_omero.model.__dict__.has_key('Location'):
    _M_omero.model.Location = Ice.createTempClass()
    class Location(_M_omero.model.IObject):
        def __init__(self, _id=None, _details=None, _loaded=False, _version=None, _vid=None, _name=None, _istatCode=None, _lastUpdate=None, _ceaseDate=None):
            if __builtin__.type(self) == _M_omero.model.Location:
                raise RuntimeError('omero.model.Location is an abstract class')
            _M_omero.model.IObject.__init__(self, _id, _details, _loaded)
            self._version = _version
            self._vid = _vid
            self._name = _name
            self._istatCode = _istatCode
            self._lastUpdate = _lastUpdate
            self._ceaseDate = _ceaseDate

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::omero::model::IObject', '::omero::model::Location')

        def ice_id(self, current=None):
            return '::omero::model::Location'

        def ice_staticId():
            return '::omero::model::Location'
        ice_staticId = staticmethod(ice_staticId)

        def getVersion(self, current=None):
            pass

        def setVersion(self, theVersion, current=None):
            pass

        def getVid(self, current=None):
            pass

        def setVid(self, theVid, current=None):
            pass

        def getName(self, current=None):
            pass

        def setName(self, theName, current=None):
            pass

        def getIstatCode(self, current=None):
            pass

        def setIstatCode(self, theIstatCode, current=None):
            pass

        def getLastUpdate(self, current=None):
            pass

        def setLastUpdate(self, theLastUpdate, current=None):
            pass

        def getCeaseDate(self, current=None):
            pass

        def setCeaseDate(self, theCeaseDate, current=None):
            pass

        def __str__(self):
            return IcePy.stringify(self, _M_omero.model._t_Location)

        __repr__ = __str__

    _M_omero.model.LocationPrx = Ice.createTempClass()
    class LocationPrx(_M_omero.model.IObjectPrx):

        def getVersion(self, _ctx=None):
            return _M_omero.model.Location._op_getVersion.invoke(self, ((), _ctx))

        def begin_getVersion(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Location._op_getVersion.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getVersion(self, _r):
            return _M_omero.model.Location._op_getVersion.end(self, _r)

        def setVersion(self, theVersion, _ctx=None):
            return _M_omero.model.Location._op_setVersion.invoke(self, ((theVersion, ), _ctx))

        def begin_setVersion(self, theVersion, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Location._op_setVersion.begin(self, ((theVersion, ), _response, _ex, _sent, _ctx))

        def end_setVersion(self, _r):
            return _M_omero.model.Location._op_setVersion.end(self, _r)

        def getVid(self, _ctx=None):
            return _M_omero.model.Location._op_getVid.invoke(self, ((), _ctx))

        def begin_getVid(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Location._op_getVid.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getVid(self, _r):
            return _M_omero.model.Location._op_getVid.end(self, _r)

        def setVid(self, theVid, _ctx=None):
            return _M_omero.model.Location._op_setVid.invoke(self, ((theVid, ), _ctx))

        def begin_setVid(self, theVid, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Location._op_setVid.begin(self, ((theVid, ), _response, _ex, _sent, _ctx))

        def end_setVid(self, _r):
            return _M_omero.model.Location._op_setVid.end(self, _r)

        def getName(self, _ctx=None):
            return _M_omero.model.Location._op_getName.invoke(self, ((), _ctx))

        def begin_getName(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Location._op_getName.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getName(self, _r):
            return _M_omero.model.Location._op_getName.end(self, _r)

        def setName(self, theName, _ctx=None):
            return _M_omero.model.Location._op_setName.invoke(self, ((theName, ), _ctx))

        def begin_setName(self, theName, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Location._op_setName.begin(self, ((theName, ), _response, _ex, _sent, _ctx))

        def end_setName(self, _r):
            return _M_omero.model.Location._op_setName.end(self, _r)

        def getIstatCode(self, _ctx=None):
            return _M_omero.model.Location._op_getIstatCode.invoke(self, ((), _ctx))

        def begin_getIstatCode(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Location._op_getIstatCode.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getIstatCode(self, _r):
            return _M_omero.model.Location._op_getIstatCode.end(self, _r)

        def setIstatCode(self, theIstatCode, _ctx=None):
            return _M_omero.model.Location._op_setIstatCode.invoke(self, ((theIstatCode, ), _ctx))

        def begin_setIstatCode(self, theIstatCode, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Location._op_setIstatCode.begin(self, ((theIstatCode, ), _response, _ex, _sent, _ctx))

        def end_setIstatCode(self, _r):
            return _M_omero.model.Location._op_setIstatCode.end(self, _r)

        def getLastUpdate(self, _ctx=None):
            return _M_omero.model.Location._op_getLastUpdate.invoke(self, ((), _ctx))

        def begin_getLastUpdate(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Location._op_getLastUpdate.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getLastUpdate(self, _r):
            return _M_omero.model.Location._op_getLastUpdate.end(self, _r)

        def setLastUpdate(self, theLastUpdate, _ctx=None):
            return _M_omero.model.Location._op_setLastUpdate.invoke(self, ((theLastUpdate, ), _ctx))

        def begin_setLastUpdate(self, theLastUpdate, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Location._op_setLastUpdate.begin(self, ((theLastUpdate, ), _response, _ex, _sent, _ctx))

        def end_setLastUpdate(self, _r):
            return _M_omero.model.Location._op_setLastUpdate.end(self, _r)

        def getCeaseDate(self, _ctx=None):
            return _M_omero.model.Location._op_getCeaseDate.invoke(self, ((), _ctx))

        def begin_getCeaseDate(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Location._op_getCeaseDate.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getCeaseDate(self, _r):
            return _M_omero.model.Location._op_getCeaseDate.end(self, _r)

        def setCeaseDate(self, theCeaseDate, _ctx=None):
            return _M_omero.model.Location._op_setCeaseDate.invoke(self, ((theCeaseDate, ), _ctx))

        def begin_setCeaseDate(self, theCeaseDate, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Location._op_setCeaseDate.begin(self, ((theCeaseDate, ), _response, _ex, _sent, _ctx))

        def end_setCeaseDate(self, _r):
            return _M_omero.model.Location._op_setCeaseDate.end(self, _r)

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_omero.model.LocationPrx.ice_checkedCast(proxy, '::omero::model::Location', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_omero.model.LocationPrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

    _M_omero.model._t_LocationPrx = IcePy.defineProxy('::omero::model::Location', LocationPrx)

    _M_omero.model._t_Location = IcePy.declareClass('::omero::model::Location')

    _M_omero.model._t_Location = IcePy.defineClass('::omero::model::Location', Location, (), True, _M_omero.model._t_IObject, (), (
        ('_version', (), _M_omero._t_RInt),
        ('_vid', (), _M_omero._t_RString),
        ('_name', (), _M_omero._t_RString),
        ('_istatCode', (), _M_omero._t_RString),
        ('_lastUpdate', (), _M_omero._t_RTime),
        ('_ceaseDate', (), _M_omero._t_RTime)
    ))
    Location._ice_type = _M_omero.model._t_Location

    Location._op_getVersion = IcePy.Operation('getVersion', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RInt, ())
    Location._op_setVersion = IcePy.Operation('setVersion', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RInt),), (), None, ())
    Location._op_getVid = IcePy.Operation('getVid', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    Location._op_setVid = IcePy.Operation('setVid', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    Location._op_getName = IcePy.Operation('getName', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    Location._op_setName = IcePy.Operation('setName', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    Location._op_getIstatCode = IcePy.Operation('getIstatCode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    Location._op_setIstatCode = IcePy.Operation('setIstatCode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    Location._op_getLastUpdate = IcePy.Operation('getLastUpdate', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RTime, ())
    Location._op_setLastUpdate = IcePy.Operation('setLastUpdate', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RTime),), (), None, ())
    Location._op_getCeaseDate = IcePy.Operation('getCeaseDate', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RTime, ())
    Location._op_setCeaseDate = IcePy.Operation('setCeaseDate', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RTime),), (), None, ())

    _M_omero.model.Location = Location
    del Location

    _M_omero.model.LocationPrx = LocationPrx
    del LocationPrx

# End of module omero.model

__name__ = 'omero'

# End of module omero
