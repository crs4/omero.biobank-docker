# **********************************************************************
#
# Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.4.2
#
# <auto-generated>
#
# Generated from file `IlluminaBeadChipAssayType.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

import Ice, IcePy, __builtin__
import omero_model_IObject_ice
import omero_RTypes_ice
import omero_System_ice
import omero_Collections_ice

# Included module omero
_M_omero = Ice.openModule('omero')

# Included module omero.model
_M_omero.model = Ice.openModule('omero.model')

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Included module omero.sys
_M_omero.sys = Ice.openModule('omero.sys')

# Included module omero.api
_M_omero.api = Ice.openModule('omero.api')

# Start of module omero
__name__ = 'omero'

# Start of module omero.model
__name__ = 'omero.model'

# Start of module omero.model.enums
_M_omero.model.enums = Ice.openModule('omero.model.enums')
__name__ = 'omero.model.enums'

_M_omero.model.enums.IlluminaBeadChipAssayTypeUNKNOWN = "UNKNOWN"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMAN1MDUO = "HUMAN1M_DUO"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNI5QUAD = "HUMANOMNI5_QUAD"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNI25S = "HUMANOMNI2_5S"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNI258 = "HUMANOMNI2_5_8"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNI1S = "HUMANOMNI1S"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNI1QUAD = "HUMANOMNI1_QUAD"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNIEXPRESS = "HUMANOMNIEXPRESS"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANCYTOSNP12 = "HUMANCYTOSNP_12"

_M_omero.model.enums.IlluminaBeadChipAssayTypeMETABOCHIP = "METABOCHIP"

_M_omero.model.enums.IlluminaBeadChipAssayTypeIMMUNOCHIP = "IMMUNOCHIP"

_M_omero.model.enums.IlluminaBeadChipAssayTypeALSISELECT272541A = "ALS_ISELECT_272541_A"

_M_omero.model.enums.IlluminaBeadChipAssayTypeCVDSNP55V1A = "CVDSNP55V1_A"

_M_omero.model.enums.IlluminaBeadChipAssayTypeCARDIOMETABOCHIP11395247A = "CARDIO_METABO_CHIP_11395247_A"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMAN1M = "HUMAN1M"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMAN1M2 = "HUMAN1M_2"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMAN1MDUOV3B = "HUMAN1M_DUOV3_B"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMAN610QUADV1B = "HUMAN610_QUADV1_B"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMAN660WQUADV1A = "HUMAN660W_QUAD_V1_A"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANCNV370QUADV3C = "HUMANCNV370_QUADV3_C"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANCNV370V1 = "HUMANCNV370V1"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANEXOME12V1A = "HUMANEXOME_12V1_A"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANHAP250SV10 = "HUMANHAP250SV1_0"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANHAP300V11 = "HUMANHAP300V1_1"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANHAP300V20 = "HUMANHAP300V2_0"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANHAP550V11 = "HUMANHAP550V1_1"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANHAP550V30 = "HUMANHAP550V3_0"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANHAP650YV10 = "HUMANHAP650YV1_0"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANHAP650YV30 = "HUMANHAP650YV3_0"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNI1QUADV10B = "HUMANOMNI1_QUAD_V1_0_B"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNI1QUADV10C = "HUMANOMNI1_QUAD_V1_0_C"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNI254V1B = "HUMANOMNI2_5_4V1_B"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNI254V1D = "HUMANOMNI2_5_4V1_D"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNI254V1H = "HUMANOMNI2_5_4V1_H"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNI25EXOME8V1A = "HUMANOMNI25EXOME_8V1_A"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNI54V1B = "HUMANOMNI5_4V1_B"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNIEXPRESSEXOME8V1A = "HUMANOMNIEXPRESSEXOME_8V1_A"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNIEXPRESS12V1C = "HUMANOMNIEXPRESS_12V1_C"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNIEXPRESS12V1MULTIH = "HUMANOMNIEXPRESS_12V1_MULTI_H"

_M_omero.model.enums.IlluminaBeadChipAssayTypeIMMUNOBEADCHIP11419691B = "IMMUNO_BEADCHIP_11419691_B"

_M_omero.model.enums.IlluminaBeadChipAssayTypeLINKAGE12 = "LINKAGE_12"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANEXOME12V1B = "HUMANEXOME_12V1_B"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANEXOME12V11A = "HUMANEXOME_12V1_1_A"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANEXOME12V12A = "HUMANEXOME_12V1_2_A"

_M_omero.model.enums.IlluminaBeadChipAssayTypeHUMANOMNIEXPRESS24V10A = "HUMANOMNIEXPRESS_24V1_0_A"

# End of module omero.model.enums

__name__ = 'omero.model'

if not _M_omero.model.__dict__.has_key('Details'):
    _M_omero.model._t_Details = IcePy.declareClass('::omero::model::Details')
    _M_omero.model._t_DetailsPrx = IcePy.declareProxy('::omero::model::Details')

if not _M_omero.model.__dict__.has_key('IlluminaBeadChipAssayType'):
    _M_omero.model.IlluminaBeadChipAssayType = Ice.createTempClass()
    class IlluminaBeadChipAssayType(_M_omero.model.IObject):
        def __init__(self, _id=None, _details=None, _loaded=False, _value=None):
            if __builtin__.type(self) == _M_omero.model.IlluminaBeadChipAssayType:
                raise RuntimeError('omero.model.IlluminaBeadChipAssayType is an abstract class')
            _M_omero.model.IObject.__init__(self, _id, _details, _loaded)
            self._value = _value

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::omero::model::IObject', '::omero::model::IlluminaBeadChipAssayType')

        def ice_id(self, current=None):
            return '::omero::model::IlluminaBeadChipAssayType'

        def ice_staticId():
            return '::omero::model::IlluminaBeadChipAssayType'
        ice_staticId = staticmethod(ice_staticId)

        def getValue(self, current=None):
            pass

        def setValue(self, theValue, current=None):
            pass

        def __str__(self):
            return IcePy.stringify(self, _M_omero.model._t_IlluminaBeadChipAssayType)

        __repr__ = __str__

    _M_omero.model.IlluminaBeadChipAssayTypePrx = Ice.createTempClass()
    class IlluminaBeadChipAssayTypePrx(_M_omero.model.IObjectPrx):

        def getValue(self, _ctx=None):
            return _M_omero.model.IlluminaBeadChipAssayType._op_getValue.invoke(self, ((), _ctx))

        def begin_getValue(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.IlluminaBeadChipAssayType._op_getValue.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getValue(self, _r):
            return _M_omero.model.IlluminaBeadChipAssayType._op_getValue.end(self, _r)

        def setValue(self, theValue, _ctx=None):
            return _M_omero.model.IlluminaBeadChipAssayType._op_setValue.invoke(self, ((theValue, ), _ctx))

        def begin_setValue(self, theValue, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.IlluminaBeadChipAssayType._op_setValue.begin(self, ((theValue, ), _response, _ex, _sent, _ctx))

        def end_setValue(self, _r):
            return _M_omero.model.IlluminaBeadChipAssayType._op_setValue.end(self, _r)

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_omero.model.IlluminaBeadChipAssayTypePrx.ice_checkedCast(proxy, '::omero::model::IlluminaBeadChipAssayType', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_omero.model.IlluminaBeadChipAssayTypePrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

    _M_omero.model._t_IlluminaBeadChipAssayTypePrx = IcePy.defineProxy('::omero::model::IlluminaBeadChipAssayType', IlluminaBeadChipAssayTypePrx)

    _M_omero.model._t_IlluminaBeadChipAssayType = IcePy.declareClass('::omero::model::IlluminaBeadChipAssayType')

    _M_omero.model._t_IlluminaBeadChipAssayType = IcePy.defineClass('::omero::model::IlluminaBeadChipAssayType', IlluminaBeadChipAssayType, (), True, _M_omero.model._t_IObject, (), (('_value', (), _M_omero._t_RString),))
    IlluminaBeadChipAssayType._ice_type = _M_omero.model._t_IlluminaBeadChipAssayType

    IlluminaBeadChipAssayType._op_getValue = IcePy.Operation('getValue', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    IlluminaBeadChipAssayType._op_setValue = IcePy.Operation('setValue', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())

    _M_omero.model.IlluminaBeadChipAssayType = IlluminaBeadChipAssayType
    del IlluminaBeadChipAssayType

    _M_omero.model.IlluminaBeadChipAssayTypePrx = IlluminaBeadChipAssayTypePrx
    del IlluminaBeadChipAssayTypePrx

# End of module omero.model

__name__ = 'omero'

# End of module omero
