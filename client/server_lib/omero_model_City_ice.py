# **********************************************************************
#
# Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.4.2
#
# <auto-generated>
#
# Generated from file `City.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

import Ice, IcePy, __builtin__
import omero_model_IObject_ice
import omero_RTypes_ice
import omero_System_ice
import omero_Collections_ice
import omero_model_Location_ice

# Included module omero
_M_omero = Ice.openModule('omero')

# Included module omero.model
_M_omero.model = Ice.openModule('omero.model')

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Included module omero.sys
_M_omero.sys = Ice.openModule('omero.sys')

# Included module omero.api
_M_omero.api = Ice.openModule('omero.api')

# Start of module omero
__name__ = 'omero'

# Start of module omero.model
__name__ = 'omero.model'

if not _M_omero.model.__dict__.has_key('Region'):
    _M_omero.model._t_Region = IcePy.declareClass('::omero::model::Region')
    _M_omero.model._t_RegionPrx = IcePy.declareProxy('::omero::model::Region')

if not _M_omero.model.__dict__.has_key('Details'):
    _M_omero.model._t_Details = IcePy.declareClass('::omero::model::Details')
    _M_omero.model._t_DetailsPrx = IcePy.declareProxy('::omero::model::Details')

if not _M_omero.model.__dict__.has_key('City'):
    _M_omero.model.City = Ice.createTempClass()
    class City(_M_omero.model.Location):
        def __init__(self, _id=None, _details=None, _loaded=False, _version=None, _vid=None, _name=None, _istatCode=None, _lastUpdate=None, _ceaseDate=None, _zipCode=None, _landRegisterCode=None, _uslCode=None, _region=None, _districtLabel=None):
            if __builtin__.type(self) == _M_omero.model.City:
                raise RuntimeError('omero.model.City is an abstract class')
            _M_omero.model.Location.__init__(self, _id, _details, _loaded, _version, _vid, _name, _istatCode, _lastUpdate, _ceaseDate)
            self._zipCode = _zipCode
            self._landRegisterCode = _landRegisterCode
            self._uslCode = _uslCode
            self._region = _region
            self._districtLabel = _districtLabel

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::omero::model::City', '::omero::model::IObject', '::omero::model::Location')

        def ice_id(self, current=None):
            return '::omero::model::City'

        def ice_staticId():
            return '::omero::model::City'
        ice_staticId = staticmethod(ice_staticId)

        def getZipCode(self, current=None):
            pass

        def setZipCode(self, theZipCode, current=None):
            pass

        def getLandRegisterCode(self, current=None):
            pass

        def setLandRegisterCode(self, theLandRegisterCode, current=None):
            pass

        def getUslCode(self, current=None):
            pass

        def setUslCode(self, theUslCode, current=None):
            pass

        def getRegion(self, current=None):
            pass

        def setRegion(self, theRegion, current=None):
            pass

        def getDistrictLabel(self, current=None):
            pass

        def setDistrictLabel(self, theDistrictLabel, current=None):
            pass

        def __str__(self):
            return IcePy.stringify(self, _M_omero.model._t_City)

        __repr__ = __str__

    _M_omero.model.CityPrx = Ice.createTempClass()
    class CityPrx(_M_omero.model.LocationPrx):

        def getZipCode(self, _ctx=None):
            return _M_omero.model.City._op_getZipCode.invoke(self, ((), _ctx))

        def begin_getZipCode(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.City._op_getZipCode.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getZipCode(self, _r):
            return _M_omero.model.City._op_getZipCode.end(self, _r)

        def setZipCode(self, theZipCode, _ctx=None):
            return _M_omero.model.City._op_setZipCode.invoke(self, ((theZipCode, ), _ctx))

        def begin_setZipCode(self, theZipCode, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.City._op_setZipCode.begin(self, ((theZipCode, ), _response, _ex, _sent, _ctx))

        def end_setZipCode(self, _r):
            return _M_omero.model.City._op_setZipCode.end(self, _r)

        def getLandRegisterCode(self, _ctx=None):
            return _M_omero.model.City._op_getLandRegisterCode.invoke(self, ((), _ctx))

        def begin_getLandRegisterCode(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.City._op_getLandRegisterCode.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getLandRegisterCode(self, _r):
            return _M_omero.model.City._op_getLandRegisterCode.end(self, _r)

        def setLandRegisterCode(self, theLandRegisterCode, _ctx=None):
            return _M_omero.model.City._op_setLandRegisterCode.invoke(self, ((theLandRegisterCode, ), _ctx))

        def begin_setLandRegisterCode(self, theLandRegisterCode, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.City._op_setLandRegisterCode.begin(self, ((theLandRegisterCode, ), _response, _ex, _sent, _ctx))

        def end_setLandRegisterCode(self, _r):
            return _M_omero.model.City._op_setLandRegisterCode.end(self, _r)

        def getUslCode(self, _ctx=None):
            return _M_omero.model.City._op_getUslCode.invoke(self, ((), _ctx))

        def begin_getUslCode(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.City._op_getUslCode.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getUslCode(self, _r):
            return _M_omero.model.City._op_getUslCode.end(self, _r)

        def setUslCode(self, theUslCode, _ctx=None):
            return _M_omero.model.City._op_setUslCode.invoke(self, ((theUslCode, ), _ctx))

        def begin_setUslCode(self, theUslCode, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.City._op_setUslCode.begin(self, ((theUslCode, ), _response, _ex, _sent, _ctx))

        def end_setUslCode(self, _r):
            return _M_omero.model.City._op_setUslCode.end(self, _r)

        def getRegion(self, _ctx=None):
            return _M_omero.model.City._op_getRegion.invoke(self, ((), _ctx))

        def begin_getRegion(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.City._op_getRegion.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getRegion(self, _r):
            return _M_omero.model.City._op_getRegion.end(self, _r)

        def setRegion(self, theRegion, _ctx=None):
            return _M_omero.model.City._op_setRegion.invoke(self, ((theRegion, ), _ctx))

        def begin_setRegion(self, theRegion, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.City._op_setRegion.begin(self, ((theRegion, ), _response, _ex, _sent, _ctx))

        def end_setRegion(self, _r):
            return _M_omero.model.City._op_setRegion.end(self, _r)

        def getDistrictLabel(self, _ctx=None):
            return _M_omero.model.City._op_getDistrictLabel.invoke(self, ((), _ctx))

        def begin_getDistrictLabel(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.City._op_getDistrictLabel.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getDistrictLabel(self, _r):
            return _M_omero.model.City._op_getDistrictLabel.end(self, _r)

        def setDistrictLabel(self, theDistrictLabel, _ctx=None):
            return _M_omero.model.City._op_setDistrictLabel.invoke(self, ((theDistrictLabel, ), _ctx))

        def begin_setDistrictLabel(self, theDistrictLabel, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.City._op_setDistrictLabel.begin(self, ((theDistrictLabel, ), _response, _ex, _sent, _ctx))

        def end_setDistrictLabel(self, _r):
            return _M_omero.model.City._op_setDistrictLabel.end(self, _r)

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_omero.model.CityPrx.ice_checkedCast(proxy, '::omero::model::City', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_omero.model.CityPrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

    _M_omero.model._t_CityPrx = IcePy.defineProxy('::omero::model::City', CityPrx)

    _M_omero.model._t_City = IcePy.declareClass('::omero::model::City')

    _M_omero.model._t_City = IcePy.defineClass('::omero::model::City', City, (), True, _M_omero.model._t_Location, (), (
        ('_zipCode', (), _M_omero._t_RString),
        ('_landRegisterCode', (), _M_omero._t_RString),
        ('_uslCode', (), _M_omero._t_RString),
        ('_region', (), _M_omero.model._t_Region),
        ('_districtLabel', (), _M_omero._t_RString)
    ))
    City._ice_type = _M_omero.model._t_City

    City._op_getZipCode = IcePy.Operation('getZipCode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    City._op_setZipCode = IcePy.Operation('setZipCode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    City._op_getLandRegisterCode = IcePy.Operation('getLandRegisterCode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    City._op_setLandRegisterCode = IcePy.Operation('setLandRegisterCode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    City._op_getUslCode = IcePy.Operation('getUslCode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    City._op_setUslCode = IcePy.Operation('setUslCode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    City._op_getRegion = IcePy.Operation('getRegion', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero.model._t_Region, ())
    City._op_setRegion = IcePy.Operation('setRegion', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero.model._t_Region),), (), None, ())
    City._op_getDistrictLabel = IcePy.Operation('getDistrictLabel', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    City._op_setDistrictLabel = IcePy.Operation('setDistrictLabel', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())

    _M_omero.model.City = City
    del City

    _M_omero.model.CityPrx = CityPrx
    del CityPrx

# End of module omero.model

__name__ = 'omero'

# End of module omero
