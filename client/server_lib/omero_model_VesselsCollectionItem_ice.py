# **********************************************************************
#
# Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.4.2
#
# <auto-generated>
#
# Generated from file `VesselsCollectionItem.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

import Ice, IcePy, __builtin__
import omero_model_IObject_ice
import omero_RTypes_ice
import omero_System_ice
import omero_Collections_ice

# Included module omero
_M_omero = Ice.openModule('omero')

# Included module omero.model
_M_omero.model = Ice.openModule('omero.model')

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Included module omero.sys
_M_omero.sys = Ice.openModule('omero.sys')

# Included module omero.api
_M_omero.api = Ice.openModule('omero.api')

# Start of module omero
__name__ = 'omero'

# Start of module omero.model
__name__ = 'omero.model'

if not _M_omero.model.__dict__.has_key('Vessel'):
    _M_omero.model._t_Vessel = IcePy.declareClass('::omero::model::Vessel')
    _M_omero.model._t_VesselPrx = IcePy.declareProxy('::omero::model::Vessel')

if not _M_omero.model.__dict__.has_key('VesselsCollection'):
    _M_omero.model._t_VesselsCollection = IcePy.declareClass('::omero::model::VesselsCollection')
    _M_omero.model._t_VesselsCollectionPrx = IcePy.declareProxy('::omero::model::VesselsCollection')

if not _M_omero.model.__dict__.has_key('Details'):
    _M_omero.model._t_Details = IcePy.declareClass('::omero::model::Details')
    _M_omero.model._t_DetailsPrx = IcePy.declareProxy('::omero::model::Details')

if not _M_omero.model.__dict__.has_key('VesselsCollectionItem'):
    _M_omero.model.VesselsCollectionItem = Ice.createTempClass()
    class VesselsCollectionItem(_M_omero.model.IObject):
        def __init__(self, _id=None, _details=None, _loaded=False, _version=None, _vid=None, _vessel=None, _vesselsCollection=None, _vesselsCollectionItemUK=None):
            if __builtin__.type(self) == _M_omero.model.VesselsCollectionItem:
                raise RuntimeError('omero.model.VesselsCollectionItem is an abstract class')
            _M_omero.model.IObject.__init__(self, _id, _details, _loaded)
            self._version = _version
            self._vid = _vid
            self._vessel = _vessel
            self._vesselsCollection = _vesselsCollection
            self._vesselsCollectionItemUK = _vesselsCollectionItemUK

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::omero::model::IObject', '::omero::model::VesselsCollectionItem')

        def ice_id(self, current=None):
            return '::omero::model::VesselsCollectionItem'

        def ice_staticId():
            return '::omero::model::VesselsCollectionItem'
        ice_staticId = staticmethod(ice_staticId)

        def getVersion(self, current=None):
            pass

        def setVersion(self, theVersion, current=None):
            pass

        def getVid(self, current=None):
            pass

        def setVid(self, theVid, current=None):
            pass

        def getVessel(self, current=None):
            pass

        def setVessel(self, theVessel, current=None):
            pass

        def getVesselsCollection(self, current=None):
            pass

        def setVesselsCollection(self, theVesselsCollection, current=None):
            pass

        def getVesselsCollectionItemUK(self, current=None):
            pass

        def setVesselsCollectionItemUK(self, theVesselsCollectionItemUK, current=None):
            pass

        def __str__(self):
            return IcePy.stringify(self, _M_omero.model._t_VesselsCollectionItem)

        __repr__ = __str__

    _M_omero.model.VesselsCollectionItemPrx = Ice.createTempClass()
    class VesselsCollectionItemPrx(_M_omero.model.IObjectPrx):

        def getVersion(self, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_getVersion.invoke(self, ((), _ctx))

        def begin_getVersion(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_getVersion.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getVersion(self, _r):
            return _M_omero.model.VesselsCollectionItem._op_getVersion.end(self, _r)

        def setVersion(self, theVersion, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_setVersion.invoke(self, ((theVersion, ), _ctx))

        def begin_setVersion(self, theVersion, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_setVersion.begin(self, ((theVersion, ), _response, _ex, _sent, _ctx))

        def end_setVersion(self, _r):
            return _M_omero.model.VesselsCollectionItem._op_setVersion.end(self, _r)

        def getVid(self, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_getVid.invoke(self, ((), _ctx))

        def begin_getVid(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_getVid.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getVid(self, _r):
            return _M_omero.model.VesselsCollectionItem._op_getVid.end(self, _r)

        def setVid(self, theVid, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_setVid.invoke(self, ((theVid, ), _ctx))

        def begin_setVid(self, theVid, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_setVid.begin(self, ((theVid, ), _response, _ex, _sent, _ctx))

        def end_setVid(self, _r):
            return _M_omero.model.VesselsCollectionItem._op_setVid.end(self, _r)

        def getVessel(self, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_getVessel.invoke(self, ((), _ctx))

        def begin_getVessel(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_getVessel.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getVessel(self, _r):
            return _M_omero.model.VesselsCollectionItem._op_getVessel.end(self, _r)

        def setVessel(self, theVessel, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_setVessel.invoke(self, ((theVessel, ), _ctx))

        def begin_setVessel(self, theVessel, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_setVessel.begin(self, ((theVessel, ), _response, _ex, _sent, _ctx))

        def end_setVessel(self, _r):
            return _M_omero.model.VesselsCollectionItem._op_setVessel.end(self, _r)

        def getVesselsCollection(self, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_getVesselsCollection.invoke(self, ((), _ctx))

        def begin_getVesselsCollection(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_getVesselsCollection.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getVesselsCollection(self, _r):
            return _M_omero.model.VesselsCollectionItem._op_getVesselsCollection.end(self, _r)

        def setVesselsCollection(self, theVesselsCollection, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_setVesselsCollection.invoke(self, ((theVesselsCollection, ), _ctx))

        def begin_setVesselsCollection(self, theVesselsCollection, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_setVesselsCollection.begin(self, ((theVesselsCollection, ), _response, _ex, _sent, _ctx))

        def end_setVesselsCollection(self, _r):
            return _M_omero.model.VesselsCollectionItem._op_setVesselsCollection.end(self, _r)

        def getVesselsCollectionItemUK(self, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_getVesselsCollectionItemUK.invoke(self, ((), _ctx))

        def begin_getVesselsCollectionItemUK(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_getVesselsCollectionItemUK.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getVesselsCollectionItemUK(self, _r):
            return _M_omero.model.VesselsCollectionItem._op_getVesselsCollectionItemUK.end(self, _r)

        def setVesselsCollectionItemUK(self, theVesselsCollectionItemUK, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_setVesselsCollectionItemUK.invoke(self, ((theVesselsCollectionItemUK, ), _ctx))

        def begin_setVesselsCollectionItemUK(self, theVesselsCollectionItemUK, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.VesselsCollectionItem._op_setVesselsCollectionItemUK.begin(self, ((theVesselsCollectionItemUK, ), _response, _ex, _sent, _ctx))

        def end_setVesselsCollectionItemUK(self, _r):
            return _M_omero.model.VesselsCollectionItem._op_setVesselsCollectionItemUK.end(self, _r)

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_omero.model.VesselsCollectionItemPrx.ice_checkedCast(proxy, '::omero::model::VesselsCollectionItem', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_omero.model.VesselsCollectionItemPrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

    _M_omero.model._t_VesselsCollectionItemPrx = IcePy.defineProxy('::omero::model::VesselsCollectionItem', VesselsCollectionItemPrx)

    _M_omero.model._t_VesselsCollectionItem = IcePy.declareClass('::omero::model::VesselsCollectionItem')

    _M_omero.model._t_VesselsCollectionItem = IcePy.defineClass('::omero::model::VesselsCollectionItem', VesselsCollectionItem, (), True, _M_omero.model._t_IObject, (), (
        ('_version', (), _M_omero._t_RInt),
        ('_vid', (), _M_omero._t_RString),
        ('_vessel', (), _M_omero.model._t_Vessel),
        ('_vesselsCollection', (), _M_omero.model._t_VesselsCollection),
        ('_vesselsCollectionItemUK', (), _M_omero._t_RString)
    ))
    VesselsCollectionItem._ice_type = _M_omero.model._t_VesselsCollectionItem

    VesselsCollectionItem._op_getVersion = IcePy.Operation('getVersion', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RInt, ())
    VesselsCollectionItem._op_setVersion = IcePy.Operation('setVersion', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RInt),), (), None, ())
    VesselsCollectionItem._op_getVid = IcePy.Operation('getVid', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    VesselsCollectionItem._op_setVid = IcePy.Operation('setVid', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    VesselsCollectionItem._op_getVessel = IcePy.Operation('getVessel', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero.model._t_Vessel, ())
    VesselsCollectionItem._op_setVessel = IcePy.Operation('setVessel', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero.model._t_Vessel),), (), None, ())
    VesselsCollectionItem._op_getVesselsCollection = IcePy.Operation('getVesselsCollection', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero.model._t_VesselsCollection, ())
    VesselsCollectionItem._op_setVesselsCollection = IcePy.Operation('setVesselsCollection', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero.model._t_VesselsCollection),), (), None, ())
    VesselsCollectionItem._op_getVesselsCollectionItemUK = IcePy.Operation('getVesselsCollectionItemUK', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    VesselsCollectionItem._op_setVesselsCollectionItemUK = IcePy.Operation('setVesselsCollectionItemUK', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())

    _M_omero.model.VesselsCollectionItem = VesselsCollectionItem
    del VesselsCollectionItem

    _M_omero.model.VesselsCollectionItemPrx = VesselsCollectionItemPrx
    del VesselsCollectionItemPrx

# End of module omero.model

__name__ = 'omero'

# End of module omero
