# **********************************************************************
#
# Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.4.2
#
# <auto-generated>
#
# Generated from file `VesselsCollection.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

import Ice, IcePy, __builtin__
import omero_model_IObject_ice
import omero_RTypes_ice
import omero_System_ice
import omero_Collections_ice
import omero_model_VLCollection_ice

# Included module omero
_M_omero = Ice.openModule('omero')

# Included module omero.model
_M_omero.model = Ice.openModule('omero.model')

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Included module omero.sys
_M_omero.sys = Ice.openModule('omero.sys')

# Included module omero.api
_M_omero.api = Ice.openModule('omero.api')

# Start of module omero
__name__ = 'omero'

# Start of module omero.model
__name__ = 'omero.model'

if not _M_omero.model.__dict__.has_key('Action'):
    _M_omero.model._t_Action = IcePy.declareClass('::omero::model::Action')
    _M_omero.model._t_ActionPrx = IcePy.declareProxy('::omero::model::Action')

if not _M_omero.model.__dict__.has_key('Details'):
    _M_omero.model._t_Details = IcePy.declareClass('::omero::model::Details')
    _M_omero.model._t_DetailsPrx = IcePy.declareProxy('::omero::model::Details')

if not _M_omero.model.__dict__.has_key('VesselsCollection'):
    _M_omero.model.VesselsCollection = Ice.createTempClass()
    class VesselsCollection(_M_omero.model.VLCollection):
        def __init__(self, _id=None, _details=None, _loaded=False, _version=None, _vid=None, _label=None, _creationDate=None, _action=None, _lastUpdate=None):
            if __builtin__.type(self) == _M_omero.model.VesselsCollection:
                raise RuntimeError('omero.model.VesselsCollection is an abstract class')
            _M_omero.model.VLCollection.__init__(self, _id, _details, _loaded, _version, _vid, _label, _creationDate, _action, _lastUpdate)

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::omero::model::IObject', '::omero::model::VLCollection', '::omero::model::VesselsCollection')

        def ice_id(self, current=None):
            return '::omero::model::VesselsCollection'

        def ice_staticId():
            return '::omero::model::VesselsCollection'
        ice_staticId = staticmethod(ice_staticId)

        def __str__(self):
            return IcePy.stringify(self, _M_omero.model._t_VesselsCollection)

        __repr__ = __str__

    _M_omero.model.VesselsCollectionPrx = Ice.createTempClass()
    class VesselsCollectionPrx(_M_omero.model.VLCollectionPrx):

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_omero.model.VesselsCollectionPrx.ice_checkedCast(proxy, '::omero::model::VesselsCollection', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_omero.model.VesselsCollectionPrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

    _M_omero.model._t_VesselsCollectionPrx = IcePy.defineProxy('::omero::model::VesselsCollection', VesselsCollectionPrx)

    _M_omero.model._t_VesselsCollection = IcePy.declareClass('::omero::model::VesselsCollection')

    _M_omero.model._t_VesselsCollection = IcePy.defineClass('::omero::model::VesselsCollection', VesselsCollection, (), True, _M_omero.model._t_VLCollection, (), ())
    VesselsCollection._ice_type = _M_omero.model._t_VesselsCollection

    _M_omero.model.VesselsCollection = VesselsCollection
    del VesselsCollection

    _M_omero.model.VesselsCollectionPrx = VesselsCollectionPrx
    del VesselsCollectionPrx

# End of module omero.model

__name__ = 'omero'

# End of module omero
