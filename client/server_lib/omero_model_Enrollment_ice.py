# **********************************************************************
#
# Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.4.2
#
# <auto-generated>
#
# Generated from file `Enrollment.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

import Ice, IcePy, __builtin__
import omero_model_IObject_ice
import omero_RTypes_ice
import omero_System_ice
import omero_Collections_ice

# Included module omero
_M_omero = Ice.openModule('omero')

# Included module omero.model
_M_omero.model = Ice.openModule('omero.model')

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Included module omero.sys
_M_omero.sys = Ice.openModule('omero.sys')

# Included module omero.api
_M_omero.api = Ice.openModule('omero.api')

# Start of module omero
__name__ = 'omero'

# Start of module omero.model
__name__ = 'omero.model'

if not _M_omero.model.__dict__.has_key('Individual'):
    _M_omero.model._t_Individual = IcePy.declareClass('::omero::model::Individual')
    _M_omero.model._t_IndividualPrx = IcePy.declareProxy('::omero::model::Individual')

if not _M_omero.model.__dict__.has_key('Study'):
    _M_omero.model._t_Study = IcePy.declareClass('::omero::model::Study')
    _M_omero.model._t_StudyPrx = IcePy.declareProxy('::omero::model::Study')

if not _M_omero.model.__dict__.has_key('Details'):
    _M_omero.model._t_Details = IcePy.declareClass('::omero::model::Details')
    _M_omero.model._t_DetailsPrx = IcePy.declareProxy('::omero::model::Details')

if not _M_omero.model.__dict__.has_key('Enrollment'):
    _M_omero.model.Enrollment = Ice.createTempClass()
    class Enrollment(_M_omero.model.IObject):
        def __init__(self, _id=None, _details=None, _loaded=False, _version=None, _vid=None, _individual=None, _study=None, _studyCode=None, _stCodeUK=None, _stIndUK=None):
            if __builtin__.type(self) == _M_omero.model.Enrollment:
                raise RuntimeError('omero.model.Enrollment is an abstract class')
            _M_omero.model.IObject.__init__(self, _id, _details, _loaded)
            self._version = _version
            self._vid = _vid
            self._individual = _individual
            self._study = _study
            self._studyCode = _studyCode
            self._stCodeUK = _stCodeUK
            self._stIndUK = _stIndUK

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::omero::model::Enrollment', '::omero::model::IObject')

        def ice_id(self, current=None):
            return '::omero::model::Enrollment'

        def ice_staticId():
            return '::omero::model::Enrollment'
        ice_staticId = staticmethod(ice_staticId)

        def getVersion(self, current=None):
            pass

        def setVersion(self, theVersion, current=None):
            pass

        def getVid(self, current=None):
            pass

        def setVid(self, theVid, current=None):
            pass

        def getIndividual(self, current=None):
            pass

        def setIndividual(self, theIndividual, current=None):
            pass

        def getStudy(self, current=None):
            pass

        def setStudy(self, theStudy, current=None):
            pass

        def getStudyCode(self, current=None):
            pass

        def setStudyCode(self, theStudyCode, current=None):
            pass

        def getStCodeUK(self, current=None):
            pass

        def setStCodeUK(self, theStCodeUK, current=None):
            pass

        def getStIndUK(self, current=None):
            pass

        def setStIndUK(self, theStIndUK, current=None):
            pass

        def __str__(self):
            return IcePy.stringify(self, _M_omero.model._t_Enrollment)

        __repr__ = __str__

    _M_omero.model.EnrollmentPrx = Ice.createTempClass()
    class EnrollmentPrx(_M_omero.model.IObjectPrx):

        def getVersion(self, _ctx=None):
            return _M_omero.model.Enrollment._op_getVersion.invoke(self, ((), _ctx))

        def begin_getVersion(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_getVersion.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getVersion(self, _r):
            return _M_omero.model.Enrollment._op_getVersion.end(self, _r)

        def setVersion(self, theVersion, _ctx=None):
            return _M_omero.model.Enrollment._op_setVersion.invoke(self, ((theVersion, ), _ctx))

        def begin_setVersion(self, theVersion, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_setVersion.begin(self, ((theVersion, ), _response, _ex, _sent, _ctx))

        def end_setVersion(self, _r):
            return _M_omero.model.Enrollment._op_setVersion.end(self, _r)

        def getVid(self, _ctx=None):
            return _M_omero.model.Enrollment._op_getVid.invoke(self, ((), _ctx))

        def begin_getVid(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_getVid.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getVid(self, _r):
            return _M_omero.model.Enrollment._op_getVid.end(self, _r)

        def setVid(self, theVid, _ctx=None):
            return _M_omero.model.Enrollment._op_setVid.invoke(self, ((theVid, ), _ctx))

        def begin_setVid(self, theVid, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_setVid.begin(self, ((theVid, ), _response, _ex, _sent, _ctx))

        def end_setVid(self, _r):
            return _M_omero.model.Enrollment._op_setVid.end(self, _r)

        def getIndividual(self, _ctx=None):
            return _M_omero.model.Enrollment._op_getIndividual.invoke(self, ((), _ctx))

        def begin_getIndividual(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_getIndividual.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getIndividual(self, _r):
            return _M_omero.model.Enrollment._op_getIndividual.end(self, _r)

        def setIndividual(self, theIndividual, _ctx=None):
            return _M_omero.model.Enrollment._op_setIndividual.invoke(self, ((theIndividual, ), _ctx))

        def begin_setIndividual(self, theIndividual, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_setIndividual.begin(self, ((theIndividual, ), _response, _ex, _sent, _ctx))

        def end_setIndividual(self, _r):
            return _M_omero.model.Enrollment._op_setIndividual.end(self, _r)

        def getStudy(self, _ctx=None):
            return _M_omero.model.Enrollment._op_getStudy.invoke(self, ((), _ctx))

        def begin_getStudy(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_getStudy.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getStudy(self, _r):
            return _M_omero.model.Enrollment._op_getStudy.end(self, _r)

        def setStudy(self, theStudy, _ctx=None):
            return _M_omero.model.Enrollment._op_setStudy.invoke(self, ((theStudy, ), _ctx))

        def begin_setStudy(self, theStudy, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_setStudy.begin(self, ((theStudy, ), _response, _ex, _sent, _ctx))

        def end_setStudy(self, _r):
            return _M_omero.model.Enrollment._op_setStudy.end(self, _r)

        def getStudyCode(self, _ctx=None):
            return _M_omero.model.Enrollment._op_getStudyCode.invoke(self, ((), _ctx))

        def begin_getStudyCode(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_getStudyCode.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getStudyCode(self, _r):
            return _M_omero.model.Enrollment._op_getStudyCode.end(self, _r)

        def setStudyCode(self, theStudyCode, _ctx=None):
            return _M_omero.model.Enrollment._op_setStudyCode.invoke(self, ((theStudyCode, ), _ctx))

        def begin_setStudyCode(self, theStudyCode, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_setStudyCode.begin(self, ((theStudyCode, ), _response, _ex, _sent, _ctx))

        def end_setStudyCode(self, _r):
            return _M_omero.model.Enrollment._op_setStudyCode.end(self, _r)

        def getStCodeUK(self, _ctx=None):
            return _M_omero.model.Enrollment._op_getStCodeUK.invoke(self, ((), _ctx))

        def begin_getStCodeUK(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_getStCodeUK.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getStCodeUK(self, _r):
            return _M_omero.model.Enrollment._op_getStCodeUK.end(self, _r)

        def setStCodeUK(self, theStCodeUK, _ctx=None):
            return _M_omero.model.Enrollment._op_setStCodeUK.invoke(self, ((theStCodeUK, ), _ctx))

        def begin_setStCodeUK(self, theStCodeUK, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_setStCodeUK.begin(self, ((theStCodeUK, ), _response, _ex, _sent, _ctx))

        def end_setStCodeUK(self, _r):
            return _M_omero.model.Enrollment._op_setStCodeUK.end(self, _r)

        def getStIndUK(self, _ctx=None):
            return _M_omero.model.Enrollment._op_getStIndUK.invoke(self, ((), _ctx))

        def begin_getStIndUK(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_getStIndUK.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getStIndUK(self, _r):
            return _M_omero.model.Enrollment._op_getStIndUK.end(self, _r)

        def setStIndUK(self, theStIndUK, _ctx=None):
            return _M_omero.model.Enrollment._op_setStIndUK.invoke(self, ((theStIndUK, ), _ctx))

        def begin_setStIndUK(self, theStIndUK, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Enrollment._op_setStIndUK.begin(self, ((theStIndUK, ), _response, _ex, _sent, _ctx))

        def end_setStIndUK(self, _r):
            return _M_omero.model.Enrollment._op_setStIndUK.end(self, _r)

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_omero.model.EnrollmentPrx.ice_checkedCast(proxy, '::omero::model::Enrollment', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_omero.model.EnrollmentPrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

    _M_omero.model._t_EnrollmentPrx = IcePy.defineProxy('::omero::model::Enrollment', EnrollmentPrx)

    _M_omero.model._t_Enrollment = IcePy.declareClass('::omero::model::Enrollment')

    _M_omero.model._t_Enrollment = IcePy.defineClass('::omero::model::Enrollment', Enrollment, (), True, _M_omero.model._t_IObject, (), (
        ('_version', (), _M_omero._t_RInt),
        ('_vid', (), _M_omero._t_RString),
        ('_individual', (), _M_omero.model._t_Individual),
        ('_study', (), _M_omero.model._t_Study),
        ('_studyCode', (), _M_omero._t_RString),
        ('_stCodeUK', (), _M_omero._t_RString),
        ('_stIndUK', (), _M_omero._t_RString)
    ))
    Enrollment._ice_type = _M_omero.model._t_Enrollment

    Enrollment._op_getVersion = IcePy.Operation('getVersion', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RInt, ())
    Enrollment._op_setVersion = IcePy.Operation('setVersion', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RInt),), (), None, ())
    Enrollment._op_getVid = IcePy.Operation('getVid', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    Enrollment._op_setVid = IcePy.Operation('setVid', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    Enrollment._op_getIndividual = IcePy.Operation('getIndividual', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero.model._t_Individual, ())
    Enrollment._op_setIndividual = IcePy.Operation('setIndividual', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero.model._t_Individual),), (), None, ())
    Enrollment._op_getStudy = IcePy.Operation('getStudy', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero.model._t_Study, ())
    Enrollment._op_setStudy = IcePy.Operation('setStudy', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero.model._t_Study),), (), None, ())
    Enrollment._op_getStudyCode = IcePy.Operation('getStudyCode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    Enrollment._op_setStudyCode = IcePy.Operation('setStudyCode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    Enrollment._op_getStCodeUK = IcePy.Operation('getStCodeUK', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    Enrollment._op_setStCodeUK = IcePy.Operation('setStCodeUK', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    Enrollment._op_getStIndUK = IcePy.Operation('getStIndUK', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    Enrollment._op_setStIndUK = IcePy.Operation('setStIndUK', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())

    _M_omero.model.Enrollment = Enrollment
    del Enrollment

    _M_omero.model.EnrollmentPrx = EnrollmentPrx
    del EnrollmentPrx

# End of module omero.model

__name__ = 'omero'

# End of module omero
