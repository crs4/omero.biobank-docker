# **********************************************************************
#
# Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.4.2
#
# <auto-generated>
#
# Generated from file `Individual.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

import Ice, IcePy, __builtin__
import omero_model_IObject_ice
import omero_RTypes_ice
import omero_System_ice
import omero_Collections_ice

# Included module omero
_M_omero = Ice.openModule('omero')

# Included module omero.model
_M_omero.model = Ice.openModule('omero.model')

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Included module omero.sys
_M_omero.sys = Ice.openModule('omero.sys')

# Included module omero.api
_M_omero.api = Ice.openModule('omero.api')

# Start of module omero
__name__ = 'omero'

# Start of module omero.model
__name__ = 'omero.model'

if not _M_omero.model.__dict__.has_key('Gender'):
    _M_omero.model._t_Gender = IcePy.declareClass('::omero::model::Gender')
    _M_omero.model._t_GenderPrx = IcePy.declareProxy('::omero::model::Gender')

if not _M_omero.model.__dict__.has_key('Individual'):
    _M_omero.model._t_Individual = IcePy.declareClass('::omero::model::Individual')
    _M_omero.model._t_IndividualPrx = IcePy.declareProxy('::omero::model::Individual')

if not _M_omero.model.__dict__.has_key('Action'):
    _M_omero.model._t_Action = IcePy.declareClass('::omero::model::Action')
    _M_omero.model._t_ActionPrx = IcePy.declareProxy('::omero::model::Action')

if not _M_omero.model.__dict__.has_key('ActionOnAction'):
    _M_omero.model._t_ActionOnAction = IcePy.declareClass('::omero::model::ActionOnAction')
    _M_omero.model._t_ActionOnActionPrx = IcePy.declareProxy('::omero::model::ActionOnAction')

if not _M_omero.model.__dict__.has_key('Details'):
    _M_omero.model._t_Details = IcePy.declareClass('::omero::model::Details')
    _M_omero.model._t_DetailsPrx = IcePy.declareProxy('::omero::model::Details')

if not _M_omero.model.__dict__.has_key('Individual'):
    _M_omero.model.Individual = Ice.createTempClass()
    class Individual(_M_omero.model.IObject):
        def __init__(self, _id=None, _details=None, _loaded=False, _version=None, _vid=None, _gender=None, _father=None, _fatherTrusted=None, _mother=None, _motherTrusted=None, _action=None, _lastUpdate=None):
            if __builtin__.type(self) == _M_omero.model.Individual:
                raise RuntimeError('omero.model.Individual is an abstract class')
            _M_omero.model.IObject.__init__(self, _id, _details, _loaded)
            self._version = _version
            self._vid = _vid
            self._gender = _gender
            self._father = _father
            self._fatherTrusted = _fatherTrusted
            self._mother = _mother
            self._motherTrusted = _motherTrusted
            self._action = _action
            self._lastUpdate = _lastUpdate

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::omero::model::IObject', '::omero::model::Individual')

        def ice_id(self, current=None):
            return '::omero::model::Individual'

        def ice_staticId():
            return '::omero::model::Individual'
        ice_staticId = staticmethod(ice_staticId)

        def getVersion(self, current=None):
            pass

        def setVersion(self, theVersion, current=None):
            pass

        def getVid(self, current=None):
            pass

        def setVid(self, theVid, current=None):
            pass

        def getGender(self, current=None):
            pass

        def setGender(self, theGender, current=None):
            pass

        def getFather(self, current=None):
            pass

        def setFather(self, theFather, current=None):
            pass

        def getFatherTrusted(self, current=None):
            pass

        def setFatherTrusted(self, theFatherTrusted, current=None):
            pass

        def getMother(self, current=None):
            pass

        def setMother(self, theMother, current=None):
            pass

        def getMotherTrusted(self, current=None):
            pass

        def setMotherTrusted(self, theMotherTrusted, current=None):
            pass

        def getAction(self, current=None):
            pass

        def setAction(self, theAction, current=None):
            pass

        def getLastUpdate(self, current=None):
            pass

        def setLastUpdate(self, theLastUpdate, current=None):
            pass

        def __str__(self):
            return IcePy.stringify(self, _M_omero.model._t_Individual)

        __repr__ = __str__

    _M_omero.model.IndividualPrx = Ice.createTempClass()
    class IndividualPrx(_M_omero.model.IObjectPrx):

        def getVersion(self, _ctx=None):
            return _M_omero.model.Individual._op_getVersion.invoke(self, ((), _ctx))

        def begin_getVersion(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_getVersion.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getVersion(self, _r):
            return _M_omero.model.Individual._op_getVersion.end(self, _r)

        def setVersion(self, theVersion, _ctx=None):
            return _M_omero.model.Individual._op_setVersion.invoke(self, ((theVersion, ), _ctx))

        def begin_setVersion(self, theVersion, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_setVersion.begin(self, ((theVersion, ), _response, _ex, _sent, _ctx))

        def end_setVersion(self, _r):
            return _M_omero.model.Individual._op_setVersion.end(self, _r)

        def getVid(self, _ctx=None):
            return _M_omero.model.Individual._op_getVid.invoke(self, ((), _ctx))

        def begin_getVid(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_getVid.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getVid(self, _r):
            return _M_omero.model.Individual._op_getVid.end(self, _r)

        def setVid(self, theVid, _ctx=None):
            return _M_omero.model.Individual._op_setVid.invoke(self, ((theVid, ), _ctx))

        def begin_setVid(self, theVid, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_setVid.begin(self, ((theVid, ), _response, _ex, _sent, _ctx))

        def end_setVid(self, _r):
            return _M_omero.model.Individual._op_setVid.end(self, _r)

        def getGender(self, _ctx=None):
            return _M_omero.model.Individual._op_getGender.invoke(self, ((), _ctx))

        def begin_getGender(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_getGender.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getGender(self, _r):
            return _M_omero.model.Individual._op_getGender.end(self, _r)

        def setGender(self, theGender, _ctx=None):
            return _M_omero.model.Individual._op_setGender.invoke(self, ((theGender, ), _ctx))

        def begin_setGender(self, theGender, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_setGender.begin(self, ((theGender, ), _response, _ex, _sent, _ctx))

        def end_setGender(self, _r):
            return _M_omero.model.Individual._op_setGender.end(self, _r)

        def getFather(self, _ctx=None):
            return _M_omero.model.Individual._op_getFather.invoke(self, ((), _ctx))

        def begin_getFather(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_getFather.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getFather(self, _r):
            return _M_omero.model.Individual._op_getFather.end(self, _r)

        def setFather(self, theFather, _ctx=None):
            return _M_omero.model.Individual._op_setFather.invoke(self, ((theFather, ), _ctx))

        def begin_setFather(self, theFather, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_setFather.begin(self, ((theFather, ), _response, _ex, _sent, _ctx))

        def end_setFather(self, _r):
            return _M_omero.model.Individual._op_setFather.end(self, _r)

        def getFatherTrusted(self, _ctx=None):
            return _M_omero.model.Individual._op_getFatherTrusted.invoke(self, ((), _ctx))

        def begin_getFatherTrusted(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_getFatherTrusted.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getFatherTrusted(self, _r):
            return _M_omero.model.Individual._op_getFatherTrusted.end(self, _r)

        def setFatherTrusted(self, theFatherTrusted, _ctx=None):
            return _M_omero.model.Individual._op_setFatherTrusted.invoke(self, ((theFatherTrusted, ), _ctx))

        def begin_setFatherTrusted(self, theFatherTrusted, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_setFatherTrusted.begin(self, ((theFatherTrusted, ), _response, _ex, _sent, _ctx))

        def end_setFatherTrusted(self, _r):
            return _M_omero.model.Individual._op_setFatherTrusted.end(self, _r)

        def getMother(self, _ctx=None):
            return _M_omero.model.Individual._op_getMother.invoke(self, ((), _ctx))

        def begin_getMother(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_getMother.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getMother(self, _r):
            return _M_omero.model.Individual._op_getMother.end(self, _r)

        def setMother(self, theMother, _ctx=None):
            return _M_omero.model.Individual._op_setMother.invoke(self, ((theMother, ), _ctx))

        def begin_setMother(self, theMother, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_setMother.begin(self, ((theMother, ), _response, _ex, _sent, _ctx))

        def end_setMother(self, _r):
            return _M_omero.model.Individual._op_setMother.end(self, _r)

        def getMotherTrusted(self, _ctx=None):
            return _M_omero.model.Individual._op_getMotherTrusted.invoke(self, ((), _ctx))

        def begin_getMotherTrusted(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_getMotherTrusted.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getMotherTrusted(self, _r):
            return _M_omero.model.Individual._op_getMotherTrusted.end(self, _r)

        def setMotherTrusted(self, theMotherTrusted, _ctx=None):
            return _M_omero.model.Individual._op_setMotherTrusted.invoke(self, ((theMotherTrusted, ), _ctx))

        def begin_setMotherTrusted(self, theMotherTrusted, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_setMotherTrusted.begin(self, ((theMotherTrusted, ), _response, _ex, _sent, _ctx))

        def end_setMotherTrusted(self, _r):
            return _M_omero.model.Individual._op_setMotherTrusted.end(self, _r)

        def getAction(self, _ctx=None):
            return _M_omero.model.Individual._op_getAction.invoke(self, ((), _ctx))

        def begin_getAction(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_getAction.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getAction(self, _r):
            return _M_omero.model.Individual._op_getAction.end(self, _r)

        def setAction(self, theAction, _ctx=None):
            return _M_omero.model.Individual._op_setAction.invoke(self, ((theAction, ), _ctx))

        def begin_setAction(self, theAction, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_setAction.begin(self, ((theAction, ), _response, _ex, _sent, _ctx))

        def end_setAction(self, _r):
            return _M_omero.model.Individual._op_setAction.end(self, _r)

        def getLastUpdate(self, _ctx=None):
            return _M_omero.model.Individual._op_getLastUpdate.invoke(self, ((), _ctx))

        def begin_getLastUpdate(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_getLastUpdate.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getLastUpdate(self, _r):
            return _M_omero.model.Individual._op_getLastUpdate.end(self, _r)

        def setLastUpdate(self, theLastUpdate, _ctx=None):
            return _M_omero.model.Individual._op_setLastUpdate.invoke(self, ((theLastUpdate, ), _ctx))

        def begin_setLastUpdate(self, theLastUpdate, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.Individual._op_setLastUpdate.begin(self, ((theLastUpdate, ), _response, _ex, _sent, _ctx))

        def end_setLastUpdate(self, _r):
            return _M_omero.model.Individual._op_setLastUpdate.end(self, _r)

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_omero.model.IndividualPrx.ice_checkedCast(proxy, '::omero::model::Individual', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_omero.model.IndividualPrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

    _M_omero.model._t_IndividualPrx = IcePy.defineProxy('::omero::model::Individual', IndividualPrx)

    _M_omero.model._t_Individual = IcePy.defineClass('::omero::model::Individual', Individual, (), True, _M_omero.model._t_IObject, (), (
        ('_version', (), _M_omero._t_RInt),
        ('_vid', (), _M_omero._t_RString),
        ('_gender', (), _M_omero.model._t_Gender),
        ('_father', (), _M_omero.model._t_Individual),
        ('_fatherTrusted', (), _M_omero._t_RBool),
        ('_mother', (), _M_omero.model._t_Individual),
        ('_motherTrusted', (), _M_omero._t_RBool),
        ('_action', (), _M_omero.model._t_Action),
        ('_lastUpdate', (), _M_omero.model._t_ActionOnAction)
    ))
    Individual._ice_type = _M_omero.model._t_Individual

    Individual._op_getVersion = IcePy.Operation('getVersion', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RInt, ())
    Individual._op_setVersion = IcePy.Operation('setVersion', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RInt),), (), None, ())
    Individual._op_getVid = IcePy.Operation('getVid', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    Individual._op_setVid = IcePy.Operation('setVid', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    Individual._op_getGender = IcePy.Operation('getGender', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero.model._t_Gender, ())
    Individual._op_setGender = IcePy.Operation('setGender', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero.model._t_Gender),), (), None, ())
    Individual._op_getFather = IcePy.Operation('getFather', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero.model._t_Individual, ())
    Individual._op_setFather = IcePy.Operation('setFather', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero.model._t_Individual),), (), None, ())
    Individual._op_getFatherTrusted = IcePy.Operation('getFatherTrusted', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RBool, ())
    Individual._op_setFatherTrusted = IcePy.Operation('setFatherTrusted', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RBool),), (), None, ())
    Individual._op_getMother = IcePy.Operation('getMother', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero.model._t_Individual, ())
    Individual._op_setMother = IcePy.Operation('setMother', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero.model._t_Individual),), (), None, ())
    Individual._op_getMotherTrusted = IcePy.Operation('getMotherTrusted', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RBool, ())
    Individual._op_setMotherTrusted = IcePy.Operation('setMotherTrusted', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RBool),), (), None, ())
    Individual._op_getAction = IcePy.Operation('getAction', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero.model._t_Action, ())
    Individual._op_setAction = IcePy.Operation('setAction', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero.model._t_Action),), (), None, ())
    Individual._op_getLastUpdate = IcePy.Operation('getLastUpdate', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero.model._t_ActionOnAction, ())
    Individual._op_setLastUpdate = IcePy.Operation('setLastUpdate', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero.model._t_ActionOnAction),), (), None, ())

    _M_omero.model.Individual = Individual
    del Individual

    _M_omero.model.IndividualPrx = IndividualPrx
    del IndividualPrx

# End of module omero.model

__name__ = 'omero'

# End of module omero
