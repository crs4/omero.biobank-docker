# **********************************************************************
#
# Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.4.2
#
# <auto-generated>
#
# Generated from file `SNPMarkersSet.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

import Ice, IcePy, __builtin__
import omero_model_IObject_ice
import omero_RTypes_ice
import omero_System_ice
import omero_Collections_ice

# Included module omero
_M_omero = Ice.openModule('omero')

# Included module omero.model
_M_omero.model = Ice.openModule('omero.model')

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Included module omero.sys
_M_omero.sys = Ice.openModule('omero.sys')

# Included module omero.api
_M_omero.api = Ice.openModule('omero.api')

# Start of module omero
__name__ = 'omero'

# Start of module omero.model
__name__ = 'omero.model'

if not _M_omero.model.__dict__.has_key('Details'):
    _M_omero.model._t_Details = IcePy.declareClass('::omero::model::Details')
    _M_omero.model._t_DetailsPrx = IcePy.declareProxy('::omero::model::Details')

if not _M_omero.model.__dict__.has_key('SNPMarkersSet'):
    _M_omero.model.SNPMarkersSet = Ice.createTempClass()
    class SNPMarkersSet(_M_omero.model.IObject):
        def __init__(self, _id=None, _details=None, _loaded=False, _version=None, _label=None, _maker=None, _model=None, _release=None, _markersSetVID=None, _snpMarkersSetUK=None):
            if __builtin__.type(self) == _M_omero.model.SNPMarkersSet:
                raise RuntimeError('omero.model.SNPMarkersSet is an abstract class')
            _M_omero.model.IObject.__init__(self, _id, _details, _loaded)
            self._version = _version
            self._label = _label
            self._maker = _maker
            self._model = _model
            self._release = _release
            self._markersSetVID = _markersSetVID
            self._snpMarkersSetUK = _snpMarkersSetUK

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::omero::model::IObject', '::omero::model::SNPMarkersSet')

        def ice_id(self, current=None):
            return '::omero::model::SNPMarkersSet'

        def ice_staticId():
            return '::omero::model::SNPMarkersSet'
        ice_staticId = staticmethod(ice_staticId)

        def getVersion(self, current=None):
            pass

        def setVersion(self, theVersion, current=None):
            pass

        def getLabel(self, current=None):
            pass

        def setLabel(self, theLabel, current=None):
            pass

        def getMaker(self, current=None):
            pass

        def setMaker(self, theMaker, current=None):
            pass

        def getModel(self, current=None):
            pass

        def setModel(self, theModel, current=None):
            pass

        def getRelease(self, current=None):
            pass

        def setRelease(self, theRelease, current=None):
            pass

        def getMarkersSetVID(self, current=None):
            pass

        def setMarkersSetVID(self, theMarkersSetVID, current=None):
            pass

        def getSnpMarkersSetUK(self, current=None):
            pass

        def setSnpMarkersSetUK(self, theSnpMarkersSetUK, current=None):
            pass

        def __str__(self):
            return IcePy.stringify(self, _M_omero.model._t_SNPMarkersSet)

        __repr__ = __str__

    _M_omero.model.SNPMarkersSetPrx = Ice.createTempClass()
    class SNPMarkersSetPrx(_M_omero.model.IObjectPrx):

        def getVersion(self, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getVersion.invoke(self, ((), _ctx))

        def begin_getVersion(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getVersion.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getVersion(self, _r):
            return _M_omero.model.SNPMarkersSet._op_getVersion.end(self, _r)

        def setVersion(self, theVersion, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setVersion.invoke(self, ((theVersion, ), _ctx))

        def begin_setVersion(self, theVersion, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setVersion.begin(self, ((theVersion, ), _response, _ex, _sent, _ctx))

        def end_setVersion(self, _r):
            return _M_omero.model.SNPMarkersSet._op_setVersion.end(self, _r)

        def getLabel(self, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getLabel.invoke(self, ((), _ctx))

        def begin_getLabel(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getLabel.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getLabel(self, _r):
            return _M_omero.model.SNPMarkersSet._op_getLabel.end(self, _r)

        def setLabel(self, theLabel, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setLabel.invoke(self, ((theLabel, ), _ctx))

        def begin_setLabel(self, theLabel, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setLabel.begin(self, ((theLabel, ), _response, _ex, _sent, _ctx))

        def end_setLabel(self, _r):
            return _M_omero.model.SNPMarkersSet._op_setLabel.end(self, _r)

        def getMaker(self, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getMaker.invoke(self, ((), _ctx))

        def begin_getMaker(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getMaker.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getMaker(self, _r):
            return _M_omero.model.SNPMarkersSet._op_getMaker.end(self, _r)

        def setMaker(self, theMaker, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setMaker.invoke(self, ((theMaker, ), _ctx))

        def begin_setMaker(self, theMaker, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setMaker.begin(self, ((theMaker, ), _response, _ex, _sent, _ctx))

        def end_setMaker(self, _r):
            return _M_omero.model.SNPMarkersSet._op_setMaker.end(self, _r)

        def getModel(self, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getModel.invoke(self, ((), _ctx))

        def begin_getModel(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getModel.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getModel(self, _r):
            return _M_omero.model.SNPMarkersSet._op_getModel.end(self, _r)

        def setModel(self, theModel, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setModel.invoke(self, ((theModel, ), _ctx))

        def begin_setModel(self, theModel, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setModel.begin(self, ((theModel, ), _response, _ex, _sent, _ctx))

        def end_setModel(self, _r):
            return _M_omero.model.SNPMarkersSet._op_setModel.end(self, _r)

        def getRelease(self, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getRelease.invoke(self, ((), _ctx))

        def begin_getRelease(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getRelease.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getRelease(self, _r):
            return _M_omero.model.SNPMarkersSet._op_getRelease.end(self, _r)

        def setRelease(self, theRelease, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setRelease.invoke(self, ((theRelease, ), _ctx))

        def begin_setRelease(self, theRelease, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setRelease.begin(self, ((theRelease, ), _response, _ex, _sent, _ctx))

        def end_setRelease(self, _r):
            return _M_omero.model.SNPMarkersSet._op_setRelease.end(self, _r)

        def getMarkersSetVID(self, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getMarkersSetVID.invoke(self, ((), _ctx))

        def begin_getMarkersSetVID(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getMarkersSetVID.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getMarkersSetVID(self, _r):
            return _M_omero.model.SNPMarkersSet._op_getMarkersSetVID.end(self, _r)

        def setMarkersSetVID(self, theMarkersSetVID, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setMarkersSetVID.invoke(self, ((theMarkersSetVID, ), _ctx))

        def begin_setMarkersSetVID(self, theMarkersSetVID, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setMarkersSetVID.begin(self, ((theMarkersSetVID, ), _response, _ex, _sent, _ctx))

        def end_setMarkersSetVID(self, _r):
            return _M_omero.model.SNPMarkersSet._op_setMarkersSetVID.end(self, _r)

        def getSnpMarkersSetUK(self, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getSnpMarkersSetUK.invoke(self, ((), _ctx))

        def begin_getSnpMarkersSetUK(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_getSnpMarkersSetUK.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_getSnpMarkersSetUK(self, _r):
            return _M_omero.model.SNPMarkersSet._op_getSnpMarkersSetUK.end(self, _r)

        def setSnpMarkersSetUK(self, theSnpMarkersSetUK, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setSnpMarkersSetUK.invoke(self, ((theSnpMarkersSetUK, ), _ctx))

        def begin_setSnpMarkersSetUK(self, theSnpMarkersSetUK, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_omero.model.SNPMarkersSet._op_setSnpMarkersSetUK.begin(self, ((theSnpMarkersSetUK, ), _response, _ex, _sent, _ctx))

        def end_setSnpMarkersSetUK(self, _r):
            return _M_omero.model.SNPMarkersSet._op_setSnpMarkersSetUK.end(self, _r)

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_omero.model.SNPMarkersSetPrx.ice_checkedCast(proxy, '::omero::model::SNPMarkersSet', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_omero.model.SNPMarkersSetPrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

    _M_omero.model._t_SNPMarkersSetPrx = IcePy.defineProxy('::omero::model::SNPMarkersSet', SNPMarkersSetPrx)

    _M_omero.model._t_SNPMarkersSet = IcePy.declareClass('::omero::model::SNPMarkersSet')

    _M_omero.model._t_SNPMarkersSet = IcePy.defineClass('::omero::model::SNPMarkersSet', SNPMarkersSet, (), True, _M_omero.model._t_IObject, (), (
        ('_version', (), _M_omero._t_RInt),
        ('_label', (), _M_omero._t_RString),
        ('_maker', (), _M_omero._t_RString),
        ('_model', (), _M_omero._t_RString),
        ('_release', (), _M_omero._t_RString),
        ('_markersSetVID', (), _M_omero._t_RString),
        ('_snpMarkersSetUK', (), _M_omero._t_RString)
    ))
    SNPMarkersSet._ice_type = _M_omero.model._t_SNPMarkersSet

    SNPMarkersSet._op_getVersion = IcePy.Operation('getVersion', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RInt, ())
    SNPMarkersSet._op_setVersion = IcePy.Operation('setVersion', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RInt),), (), None, ())
    SNPMarkersSet._op_getLabel = IcePy.Operation('getLabel', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    SNPMarkersSet._op_setLabel = IcePy.Operation('setLabel', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    SNPMarkersSet._op_getMaker = IcePy.Operation('getMaker', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    SNPMarkersSet._op_setMaker = IcePy.Operation('setMaker', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    SNPMarkersSet._op_getModel = IcePy.Operation('getModel', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    SNPMarkersSet._op_setModel = IcePy.Operation('setModel', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    SNPMarkersSet._op_getRelease = IcePy.Operation('getRelease', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    SNPMarkersSet._op_setRelease = IcePy.Operation('setRelease', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    SNPMarkersSet._op_getMarkersSetVID = IcePy.Operation('getMarkersSetVID', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    SNPMarkersSet._op_setMarkersSetVID = IcePy.Operation('setMarkersSetVID', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())
    SNPMarkersSet._op_getSnpMarkersSetUK = IcePy.Operation('getSnpMarkersSetUK', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (), (), _M_omero._t_RString, ())
    SNPMarkersSet._op_setSnpMarkersSetUK = IcePy.Operation('setSnpMarkersSetUK', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, (), (((), _M_omero._t_RString),), (), None, ())

    _M_omero.model.SNPMarkersSet = SNPMarkersSet
    del SNPMarkersSet

    _M_omero.model.SNPMarkersSetPrx = SNPMarkersSetPrx
    del SNPMarkersSetPrx

# End of module omero.model

__name__ = 'omero'

# End of module omero
